#!/usr/bin/env zsh

# BENCHMARKING
# zmodload zsh/zprof
#----------------------------------------------------------------------------

## Interactive shell ##

skip_global_compinit=1
zmodload zsh/mathfunc
autoload -Uz compaudit compinit run-help
if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
  compinit;
else
  compinit -C;
fi

autoload -Uz run-help-git
export HELPDIR=/usr/local/share/zsh/helpfiles

# search on zshall man page
zman() { MANPAGER="less -g -s '+/^       "$1"'" man zshall }

autoload -Uz zmv
alias mmv='noglob zmv -W'

# unique these arrays
typeset -U path manpath

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Nicer history
HISTSIZE=100000
SAVEHIST=$HISTSIZE
REPORTTIME=10
#WORDCHARS=${WORDCHARS//[&=\/;\!#%\{]}
WORDCHARS='*?_[]~=&;!#$%^(){}'
HISTFILE=~/.zsh_history

# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(
  bundler
  cp colored-man-pages common-aliases
  dirpersist docker docker-compose
  fzf
  gem git gnu-utils github gitignore golang
  rails rake-fast ripgrep rsync
  sudo
  tig tmux
  z
)
[[ -x "/usr/local/bin/aws" ]] && plugins+=(aws)
[[ -x "/usr/bin/yum" ]] && plugins+=(yum)
[[ -x "/usr/bin/dpkg" ]] && plugins+=(ubuntu)
[[ -x "/usr/bin/pacman" ]] && plugins+=(archlinux)
[[ "$OSTYPE" = linux* ]] && plugins+=(systemd)
[[ "$OSTYPE" = darwin* ]] && plugins+=(brew gpg-agent ssh-agent osx)

ZSH_THEME="spaceship"

#---------------------------------------------------------------- load OMZ ---
[[ -s "$ZSH/oh-my-zsh.sh" ]] && source $ZSH/oh-my-zsh.sh
unalias sr
unalias fd

# set these after omz
[[ -x `which highlight` ]] && export LESSOPEN="| highlight %s"
export LESSCHARSET=utf-8
export LESS="-FRmX"
export EDITOR=vim
export TM_BUNDLE_SUPPORT="${HOME}/Library/Application Support/TextMate/Managed/Bundles/Ruby on Rails.tmbundle/Support"
export CUCUMBER_FORMAT=progress
export _JAVA_OPTIONS='-Dsun.java2d.opengl=true -Dawt.useSystemAAFontSettings=on'

# zshlovers(https://grml.org/zsh/zsh-lovers.html)
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'
zstyle ':completion:*:functions' ignored-patterns '_*'

# loadup ssh-agent (<3)
zstyle :omz:plugins:ssh-agent agent-forwarding on
zstyle :omz:plugins:ssh-agent identities id_rsa

# .ssh/config FTW!
h=()
if [[ -r ~/.ssh/config ]]; then
  h=($h $(awk '/^[hH]ost/ {for(i=2;i<=NF;++i) print $i}' ~/.ssh/config))
fi
if [[ $#h -gt 0 ]]; then
  zstyle ':completion:*:ssh:*' hosts $h
  zstyle ':completion:*:slogin:*' hosts $h
fi

unset SCRIPT_NAME

#----------------------------------------------------------------- aliases ---

# TMUX
unalias t
alias t=tmux
compdef _tmux t

alias ls='ls --color=auto --group-directories-first'
alias ri='ri -Tf ansi'
alias rm='rm -I'
alias listen='lsof -i -P | grep LISTEN'
alias dockspaceleft='defaults write com.apple.dock persistent-apps -array-add '\''{tile-data={}; tile-type="spacer-tile";}'\''; killall Dock'
alias dockspaceright='defaults write com.apple.dock persistent-others -array-add '\''{tile-data={}; tile-type="spacer-tile";}'\''; killall Dock'
alias tree='tree -SA'
alias gd="git difftool --no-prompt --tool=mvimdiff"
alias gs='git status -sb'
alias od='od -Ax -tx1z'
alias hexdump='hexdump -C'
alias where="command -v"
alias mv='nocorrect mv'
alias cp='nocorrect cp'
alias mkdir='nocorrect mkdir'
alias createiso='hdiutil makehybrid -iso -joliet -o $1.iso $2'
alias ctop='docker run --rm -ti --name=ctop -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop:latest'

[ -f /usr/local/opt/emacs-plus/bin/emacs ] && alias emacs='/usr/local/opt/emacs-plus/bin/emacs -nw $*'

#------------------------------------------------------------------ global ---
alias -g A="| awk"
alias -g G="| grep"
alias -g GV="| grep -v"
alias -g H="| head"
alias -g L="| $PAGER"
alias -g P=' --help | less'
alias -g R="| ruby -e"
alias -g S="| sed"
alias -g T="| tail"
alias -g V="| vim -R -"
alias -g U=' --help | head'
alias -g W="| wc"

#------------------------------------------------------------------ suffix ---
alias -s zip=zipinfo
alias -s tgz=gzcat
alias -s gz=gzcat
alias -s tbz=bzcat
alias -s bz2=bzcat
alias -s java=vim
alias -s c=vim
alias -s h=vim
alias -s C=vim
alias -s cpp=vim
alias -s php=vim
# alias -s py=vim
# alias -s rb=vim
alias -s txt=vim
alias -s xml=vim

#-------------------------------------------------------------- EMACS emul ---
bindkey -e
bindkey '\e[1;3C' forward-word
bindkey '\e[1;3D' backward-word
bindkey '\e\e[C' forward-word
bindkey '\e\e[D' backward-word

#------------------------------------------------------ History completion ---
autoload -Uz history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey '\eOA' up-line-or-beginning-search
bindkey '\eOB' down-line-or-beginning-search
bindkey '^P' up-line-or-beginning-search
bindkey '^N' down-line-or-beginning-search

# edit command line in $EDITOR
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

#-------------------------------------------------------- Spaceship Prompt ---
# autoload -Uz promptinit; promptinit
# prompt spaceship
SPACESHIP_PACKAGE_SHOW=false
SPACESHIP_NODE_SHOW=false
SPACESHIP_DOCKER_SHOW=false

#---------------------------------------------------------------- ZSH opts ---
setopt auto_resume
setopt no_beep
setopt hist_ignore_dups
setopt hist_reduce_blanks
setopt extended_history
setopt hist_expand
setopt long_list_jobs
setopt magic_equal_subst
setopt mark_dirs
setopt no_menu_complete
setopt list_rows_first
setopt multios
setopt path_dirs
setopt print_eightbit
setopt pushd_ignore_dups
setopt pushd_silent
setopt hist_no_store
setopt transient_rprompt
setopt hash_cmds
setopt numeric_glob_sort
setopt rm_star_wait
setopt auto_list
setopt auto_param_slash
setopt auto_param_keys
setopt list_types
setopt list_packed
setopt auto_cd
setopt auto_pushd
setopt pushd_minus
setopt pushd_ignore_dups
#setopt complete_aliases
setopt numericglobsort
setopt braceccl
#setopt noclobber
setopt extendedglob
setopt HIST_IGNORE_SPACE
setopt inc_append_history
setopt share_history

unsetopt promptcr
unsetopt correctall
unsetopt hist_verify
unsetopt print_exit_value

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_DEFAULT_OPTS='-m --cycle'

# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fzfrmimage() {
  docker image rm $(docker image ls | fzf | while read l; do echo $l | awk '{printf "%s:%s ", $1,$2}'; done)
}

if [[ -f "$HOME/.local/bin/virtualenvwrapper.sh" ]]; then
  export WORKON_HOME=$HOME/.virtualenvs
  export PROJECT_HOME=$HOME/Projects/python
  source $HOME/.local/bin/virtualenvwrapper.sh
fi

[ -e ${HOME}/.iterm2_shell_integration.zsh ] && source "${HOME}/.iterm2_shell_integration.zsh"

if [[ "$USER" == "paperspace" ]]; then
  export PATH="$PATH:/usr/local/cuda/bin"
  [[ -s "$HOME/src/torch/install/bin/torch-activate" ]] && source $HOME/src/torch/install/bin/torch-activate
  export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
  export CAFFE_ROOT=/home/paperspace/src/caffe
  export PYTHONPATH=$CAFFE_ROOT/python:$PYTHONPATH

  # added by Anaconda3 installer
  export PATH="/home/paperspace/anaconda3/bin:$PATH"
fi

# Base16 Shell
BASE16_SHELL="$HOME/.base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        eval "$("$BASE16_SHELL/profile_helper.sh")"

[ -e ${HOME}/.dircolors ] && eval $(dircolors -b $HOME/.dircolors)

#----------------------------------------------------------------------------
# BENCHMARKING (END)
# zprof
