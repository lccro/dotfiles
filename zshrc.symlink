# #BENCHMARKING (begin)
## set the trace prompt to include seconds, nanoseconds, script name and line number
#PS4='+$(date "+%s:%N") %N:%i> '
## save file stderr to file descriptor 3 and redirect stderr (including trace
## output) to a file with the script's PID as an extension
#exec 3>&2 2>/tmp/startlog.$$
## set options to turn on tracing and expansion of commands contained in the prompt
#setopt xtrace prompt_subst
#----------------------------------------------------------------------------

## Interactive shell ##

skip_global_compinit=1
zmodload zsh/mathfunc
autoload -U compaudit compinit run-help

autoload run-help-git
export HELPDIR=/usr/local/share/zsh/helpfiles

# search on zshall man page
zman() { MANPAGER="less -g -s '+/^       "$1"'" man zshall }

autoload zmv
alias mmv='noglob zmv -W'

# unique these arrays
typeset -U path manpath

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Nicer history
HISTSIZE=100000
SAVEHIST=$HISTSIZE
REPORTTIME=10
#WORDCHARS=${WORDCHARS//[&=\/;\!#%\{]}
WORDCHARS='*?_[]~=&;!#$%^(){}'
HISTFILE=~/.zsh_history

# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(
  brew brew-cask bundler
  capistrano cp colored-man colorize colored-man-pages common-aliases
  dirpersist
  forklift
  gem gnu-utils github gitignore
  git
  npm
  osx
  rails rake-fast rand-quote rsync rvm
  sudo
  tig tmux
  urltools
  z zeus zsh_reload
)
[[ -x "/usr/bin/yum" ]] && plugins+=(yum)
[[ -x "/usr/bin/dpkg" ]] && plugins+=(ubuntu)
[[ -x "/usr/bin/pacman" ]] && plugins+=(archlinux)
[[ "$OSTYPE" = darwin* ]] && plugins+=(ssh-agent)

ZSH_THEME="cyber-alanpeabody"

#---------------------------------------------------------------- load OMZ ---
[[ -s "$ZSH/oh-my-zsh.sh" ]] && source $ZSH/oh-my-zsh.sh
unalias sr

# set these after omz
export LESSCHARSET=utf-8
export LESS="-FRmX"
export EDITOR=$([[ -x /usr/local/bin/nvim ]] && echo nvim || [[ -x /usr/local/bin/vim ]] && echo /usr/local/bin/vim || echo vim)
export TM_BUNDLE_SUPPORT="${HOME}/Library/Application Support/TextMate/Managed/Bundles/Ruby on Rails.tmbundle/Support"
export CUCUMBER_FORMAT=progress

# zshlovers(https://grml.org/zsh/zsh-lovers.html)
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'
zstyle ':completion:*:functions' ignored-patterns '_*'

# loadup ssh-agent (<3)
zstyle :omz:plugins:ssh-agent agent-forwarding on
zstyle :omz:plugins:ssh-agent identities id_rsa

# .ssh/config FTW!
h=()
if [[ -r ~/.ssh/config ]]; then
  h=($h $(awk '/^[hH]ost/ {for(i=2;i<=NF;++i) print $i}' ~/.ssh/config))
fi
if [[ $#h -gt 0 ]]; then
  zstyle ':completion:*:ssh:*' hosts $h
  zstyle ':completion:*:slogin:*' hosts $h
fi

unset SCRIPT_NAME

#----------------------------------------------------------------- aliases ---
alias ls='ls --color=auto'
alias ri='ri -Tf ansi'
alias rm='rm -I'
alias listen='lsof -i -P | grep LISTEN'
alias dockspaceleft='defaults write com.apple.dock persistent-apps -array-add '\''{tile-data={}; tile-type="spacer-tile";}'\''; killall Dock'
alias dockspaceright='defaults write com.apple.dock persistent-others -array-add '\''{tile-data={}; tile-type="spacer-tile";}'\''; killall Dock'
alias t='tmux -2u $*'
alias tree='tree -SA'
alias gd="git difftool --no-prompt --tool=mvimdiff"
alias reset_openwith="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user"
alias gs='git status -sb'
alias whatismyip='dig +short myip.opendns.com @resolver1.opendns.com'
alias vim=$(echo $EDITOR)
alias od='od -Ax -tx1z'
alias hexdump='hexdump -C'
alias hexd=hexdump
alias where="command -v"
alias j="jobs -l"
alias mv='nocorrect mv'
alias cp='nocorrect cp'
alias mkdir='nocorrect mkdir'
alias createiso='hdiutil makehybrid -iso -joliet -o $1.iso $2'
[ -f '/usr/local/opt/emacs-plus/bin/emacs' ] && alias emacs='/usr/local/opt/emacs-plus/bin/emacs -nw $*'

#------------------------------------------------------------------ global ---
alias -g A="| awk"
alias -g G="| grep"
alias -g GV="| grep -v"
alias -g H="| head"
alias -g L="| $PAGER"
alias -g P=' --help | less'
alias -g R="| ruby -e"
alias -g S="| sed"
alias -g T="| tail"
alias -g V="| vim -R -"
alias -g U=' --help | head'
alias -g W="| wc"

#------------------------------------------------------------------ suffix ---
alias -s zip=zipinfo
alias -s tgz=gzcat
alias -s gz=gzcat
alias -s tbz=bzcat
alias -s bz2=bzcat
alias -s java=vim
alias -s c=vim
alias -s h=vim
alias -s C=vim
alias -s cpp=vim
alias -s php=vim
alias -s py=vim
alias -s rb=vim
alias -s txt=vim
alias -s xml=vim

#-------------------------------------------------------------- EMACS emul ---
bindkey -e
bindkey '\e[1;3C' forward-word
bindkey '\e[1;3D' backward-word
bindkey '\e\e[C' forward-word
bindkey '\e\e[D' backward-word

#------------------------------------------------------ History completion ---
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey '\eOA' up-line-or-beginning-search
bindkey '\eOB' down-line-or-beginning-search
bindkey '^P' up-line-or-beginning-search
bindkey '^N' down-line-or-beginning-search

# edit command line in $EDITOR
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

#---------------------------------------------------------------- ZSH opts ---
setopt auto_resume
setopt no_beep
setopt hist_ignore_dups
setopt hist_reduce_blanks
setopt extended_history
setopt hist_expand
setopt long_list_jobs
setopt magic_equal_subst
setopt mark_dirs
setopt no_menu_complete
setopt list_rows_first
setopt multios
setopt path_dirs
setopt print_eightbit
setopt pushd_ignore_dups
setopt pushd_silent
setopt hist_no_store
setopt transient_rprompt
setopt hash_cmds
setopt numeric_glob_sort
setopt rm_star_wait
setopt auto_list
setopt auto_param_slash
setopt auto_param_keys
setopt list_types
setopt list_packed
setopt auto_cd
setopt auto_pushd
setopt pushd_minus
setopt pushd_ignore_dups
#setopt complete_aliases
setopt numericglobsort
setopt braceccl
#setopt noclobber
setopt extendedglob
setopt HIST_IGNORE_SPACE
setopt inc_append_history
setopt share_history

unsetopt promptcr
unsetopt correctall
unsetopt hist_verify
unsetopt print_exit_value

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export CUDA_HOME=/usr/local/cuda
export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:$CUDA_HOME/lib"
export PATH="$CUDA_HOME/bin:$PATH"

export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Projects/python
source /usr/local/bin/virtualenvwrapper.sh

#----------------------------------------------------------------------------
## BENCHMARKING (END)
## turn off tracing
#unsetopt xtrace
## restore stderr to the value saved in FD 3
#exec 2>&3 3>&-

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
